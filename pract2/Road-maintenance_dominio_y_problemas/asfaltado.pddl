(define (domain asfaltado)
(:requirements :durative-actions :typing :fluents)
(:types tramo cuadrilla cisterna pavimentadora compactadora - object)
(:predicates (in ?x - (either cuadrilla cisterna pavimentadora compactadora) ?t - tramo)
			 (requiere_compactado ?t - tramo)
			 (requiere_luminoso ?t - tramo)
			 (pavimentado ?t - tramo)
			 (aplastado ?t - tramo)
			 (pintado ?t - tramo)
			 (vallado ?t - tramo)
			 (disponible ?x - (either tramo cuadrilla cisterna pavimentadora compactadora))
			 (conectado ?t1 - tramo ?t2 - tramo))
(:functions (duracion-desplazamiento ?t1 - tramo ?t2 - tramo)
			(duracion-compactado)
			(duracion-pavimentacion)
			(duracion-aplastado)
			(duracion-pintado)
			(duracion-vallado)
			(duracion-luminoso)
			(coste-cisterna)
			(coste-pavimentadora)
			(coste-compactadora)
			(coste-total)
            )

(:durative-action transportar_maquinaria
 :parameters (?x - (either cisterna pavimentadora compactadora) ?t1 - tramo ?t2 - tramo)
 :duration (= ?duration (* (duracion-desplazamiento ?t1 ?t2) 2))
 :condition (and (over all (disponible ?t1))
				 (over all (disponible ?t2))
				 (at start (conectado ?t1 ?t2))
				 (at start (in ?x ?t1))
                 (at start (disponible ?x)))
 :effect (and (at start (not (disponible ?x)))
			  (at start (not (in ?x ?t1)))
              (at end (in ?x ?t2))
			  (at end (disponible ?x))))
			  
(:durative-action transportar_cuadrilla
 :parameters (?x - cuadrilla ?t1 - tramo ?t2 - tramo)
 :duration (= ?duration (duracion-desplazamiento ?t1 ?t2))
 :condition (and (over all (disponible ?t1))
				 (over all (disponible ?t2))
				 (at start (conectado ?t1 ?t2))
				 (at start (in ?x ?t1))
                 (at start (disponible ?x)))
 :effect (and (at start (not (disponible ?x)))
			  (at start (not (in ?x ?t1)))
              (at end (in ?x ?t2))
			  (at end (disponible ?x))))

(:durative-action compactar
 :parameters (?t - tramo)
 :duration (= ?duration (duracion-compactado))
 :condition (and (at start (disponible ?t))
                 (at start (requiere_compactado ?t)))
 :effect (and (at start (not (disponible ?t)))
              (at end (not (requiere_compactado ?t)))
			  (at end (disponible ?t))))
						   
(:durative-action pavimentar
 :parameters (?t - tramo ?c - cisterna ?p - pavimentadora)
 :duration (= ?duration (duracion-pavimentacion))
 :condition (and (at start (disponible ?t))
                 (at start (disponible ?c))
				 (at start (disponible ?p))
				 (at start (in ?c ?t))
				 (at start (in ?p ?t))
				 (at start (not (requiere_compactado ?t)))
				 (at start (not (pavimentado ?t))))
 :effect (and (at start (not (disponible ?t)))
			  (at start (not (disponible ?c)))
			  (at start (not (disponible ?p)))
			  (at end (disponible ?t))
			  (at end (disponible ?c))
			  (at end (disponible ?p))
			  (at end (pavimentado ?t))
			  (at end (increase (coste-total)
                         (+ (coste-cisterna) (coste-pavimentadora))))))
				
(:durative-action aplastar
 :parameters (?t - tramo ?c - compactadora)
 :duration (= ?duration (duracion-compactado))
 :condition (and (at start (disponible ?t))
                 (at start (disponible ?c))
				 (at start (in ?c ?t))
				 (at start (pavimentado ?t))
				 (at start (not (aplastado ?t))))
 :effect (and (at start (not (disponible ?t)))
			  (at start (not (disponible ?c)))
			  (at end (disponible ?t))
			  (at end (disponible ?c))
			  (at end (aplastado ?t))
			  (at end (increase (coste-total)
                         (coste-compactadora)))))
						 
(:durative-action iluminar
 :parameters (?t - tramo ?c - cuadrilla)
 :duration (= ?duration (duracion-luminoso))
 :condition (and (at start (disponible ?t))
				 (at start (disponible ?c))
				 (at start (in ?c ?t))
				 (at start (aplastado ?t))
                 (at start (requiere_luminoso ?t)))
 :effect (and (at start (not (disponible ?c)))
			  (at start (not (disponible ?t)))
              (at end (not (requiere_luminoso ?t)))
			  (at end (disponible ?c))
			  (at end (disponible ?t))))
			  
(:durative-action pintar
 :parameters (?t - tramo ?c - cuadrilla)
 :duration (= ?duration (duracion-pintado))
 :condition (and (at start (disponible ?t))
				 (at start (disponible ?c))
				 (at start (in ?c ?t))
				 (at start (aplastado ?t))
                 (at start (not (pintado ?t))))
 :effect (and (at start (not (disponible ?c)))
			  (at start (not (disponible ?t)))
              (at end (pintado ?t))
			  (at end (disponible ?c))
			  (at end (disponible ?t))))
			  
(:durative-action vallar
 :parameters (?t - tramo ?c - cuadrilla)
 :duration (= ?duration (duracion-vallado))
 :condition (and (at start (disponible ?t))
				 (at start (disponible ?c))
				 (at start (in ?c ?t))
				 (at start (aplastado ?t))
                 (at start (not (vallado ?t))))
 :effect (and (at start (not (disponible ?c)))
			  (at start (not (disponible ?t)))
              (at end (vallado ?t))
			  (at end (disponible ?c))
			  (at end (disponible ?t))))

)
